node {
  name: "TestInput/raw_data"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TestInput/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TestInput/floordiv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "TestInput/floordiv"
  op: "Div"
  input: "TestInput/Size"
  input: "TestInput/floordiv/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "TestInput/mul"
  op: "Mul"
  input: "TestInput/mul/x"
  input: "TestInput/floordiv"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TestInput/strided_slice/pack_1"
  op: "Pack"
  input: "TestInput/mul"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "TestInput/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TestInput/strided_slice"
  op: "StridedSlice"
  input: "TestInput/raw_data"
  input: "TestInput/strided_slice/pack"
  input: "TestInput/strided_slice/pack_1"
  input: "TestInput/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "TestInput/Reshape/shape/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "TestInput/Reshape/shape"
  op: "Pack"
  input: "TestInput/Reshape/shape/0"
  input: "TestInput/floordiv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "TestInput/Reshape"
  op: "Reshape"
  input: "TestInput/strided_slice"
  input: "TestInput/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "TestInput/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TestInput/sub"
  op: "Sub"
  input: "TestInput/floordiv"
  input: "TestInput/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/floordiv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "TestInput/floordiv_1"
  op: "Div"
  input: "TestInput/sub"
  input: "TestInput/floordiv_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/assert_positive/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TestInput/assert_positive/assert_less/Less"
  op: "Less"
  input: "TestInput/assert_positive/Const"
  input: "TestInput/floordiv_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/assert_positive/assert_less/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TestInput/assert_positive/assert_less/All"
  op: "All"
  input: "TestInput/assert_positive/assert_less/Less"
  input: "TestInput/assert_positive/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "TestInput/assert_positive/assert_less/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "TestInput/assert_positive/assert_less/All"
  input: "TestInput/assert_positive/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "TestInput/assert_positive/assert_less/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "TestInput/assert_positive/assert_less/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/assert_positive/assert_less/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "TestInput/assert_positive/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/assert_positive/assert_less/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_t"
}
node {
  name: "TestInput/assert_positive/assert_less/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_t"
  input: "^TestInput/assert_positive/assert_less/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "epoch_size == 0, decrease batch_size or num_steps"
      }
    }
  }
}
node {
  name: "TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x > 0 did not hold element-wise: x = "
      }
    }
  }
}
node {
  name: "TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "TestInput/floordiv_1:0"
      }
    }
  }
}
node {
  name: "TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "TestInput/assert_positive/assert_less/All"
  input: "TestInput/assert_positive/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TestInput/assert_positive/assert_less/All"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "TestInput/floordiv_1"
  input: "TestInput/assert_positive/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TestInput/floordiv_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/Switch"
  input: "TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_0"
  input: "TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_1"
  input: "TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_2"
  input: "TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "TestInput/assert_positive/assert_less/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
  input: "^TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/assert_positive/assert_less/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "TestInput/assert_positive/assert_less/Assert/AssertGuard/control_dependency_1"
  input: "TestInput/assert_positive/assert_less/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/epoch_size"
  op: "Identity"
  input: "TestInput/floordiv_1"
  input: "^TestInput/assert_positive/assert_less/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/input_producer/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TestInput/input_producer/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TestInput/input_producer/range"
  op: "Range"
  input: "TestInput/input_producer/range/start"
  input: "TestInput/epoch_size"
  input: "TestInput/input_producer/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "TestInput/input_producer/fraction_of_32_full/fraction_of_32_full"
  op: "FIFOQueue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TestInput/input_producer/fraction_of_32_full/fraction_of_32_full_EnqueueMany"
  op: "QueueEnqueueMany"
  input: "TestInput/input_producer/fraction_of_32_full/fraction_of_32_full"
  input: "TestInput/input_producer/range"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TestInput/input_producer/fraction_of_32_full/fraction_of_32_full"
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "TestInput/input_producer/fraction_of_32_full/fraction_of_32_full_Close"
  op: "QueueClose"
  input: "TestInput/input_producer/fraction_of_32_full/fraction_of_32_full"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TestInput/input_producer/fraction_of_32_full/fraction_of_32_full"
      }
    }
  }
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "TestInput/input_producer/fraction_of_32_full/fraction_of_32_full_Close_1"
  op: "QueueClose"
  input: "TestInput/input_producer/fraction_of_32_full/fraction_of_32_full"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TestInput/input_producer/fraction_of_32_full/fraction_of_32_full"
      }
    }
  }
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "TestInput/input_producer/fraction_of_32_full/fraction_of_32_full_Size"
  op: "QueueSize"
  input: "TestInput/input_producer/fraction_of_32_full/fraction_of_32_full"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TestInput/input_producer/fraction_of_32_full/fraction_of_32_full"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/input_producer/fraction_of_32_full/Cast"
  op: "Cast"
  input: "TestInput/input_producer/fraction_of_32_full/fraction_of_32_full_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/input_producer/fraction_of_32_full/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "TestInput/input_producer/fraction_of_32_full/mul"
  op: "Mul"
  input: "TestInput/input_producer/fraction_of_32_full/Cast"
  input: "TestInput/input_producer/fraction_of_32_full/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/input_producer/fraction_of_32_full/ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "queue/TestInput/input_producer/fraction_of_32_full/fraction_of_32_full/TestInput/input_producer/"
      }
    }
  }
}
node {
  name: "TestInput/input_producer/fraction_of_32_full/ScalarSummary"
  op: "ScalarSummary"
  input: "TestInput/input_producer/fraction_of_32_full/ScalarSummary/tags"
  input: "TestInput/input_producer/fraction_of_32_full/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/fraction_of_32_full_Dequeue"
  op: "QueueDequeue"
  input: "TestInput/input_producer/fraction_of_32_full/fraction_of_32_full"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@TestInput/input_producer/fraction_of_32_full/fraction_of_32_full"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "TestInput/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "TestInput/mul_1"
  op: "Mul"
  input: "TestInput/fraction_of_32_full_Dequeue"
  input: "TestInput/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/Slice/begin/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TestInput/Slice/begin"
  op: "Pack"
  input: "TestInput/Slice/begin/0"
  input: "TestInput/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "TestInput/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "TestInput/Slice"
  op: "Slice"
  input: "TestInput/Reshape"
  input: "TestInput/Slice/begin"
  input: "TestInput/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "TestInput/mul_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "TestInput/mul_2"
  op: "Mul"
  input: "TestInput/fraction_of_32_full_Dequeue"
  input: "TestInput/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "TestInput/add"
  op: "Add"
  input: "TestInput/mul_2"
  input: "TestInput/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TestInput/Slice_1/begin/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TestInput/Slice_1/begin"
  op: "Pack"
  input: "TestInput/Slice_1/begin/0"
  input: "TestInput/add"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "TestInput/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "TestInput/Slice_1"
  op: "Slice"
  input: "TestInput/Reshape"
  input: "TestInput/Slice_1/begin"
  input: "TestInput/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Model/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "Model/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/zeros"
  op: "Fill"
  input: "Model/pack"
  input: "Model/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "Model/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/zeros_1"
  op: "Fill"
  input: "Model/pack_1"
  input: "Model/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "Model/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/zeros_2"
  op: "Fill"
  input: "Model/pack_2"
  input: "Model/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/pack_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "Model/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/zeros_3"
  op: "Fill"
  input: "Model/pack_3"
  input: "Model/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/embedding"
  op: "Variable"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17000
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 17000
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/embedding/Initializer/random_uniform/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "hB\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "Model/embedding/Initializer/random_uniform/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/embedding/Initializer/random_uniform/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/embedding/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/embedding/Initializer/random_uniform/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17000
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Model/embedding/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/embedding/Initializer/random_uniform/max"
  input: "Model/embedding/Initializer/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/embedding/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/embedding/Initializer/random_uniform/RandomUniform"
  input: "Model/embedding/Initializer/random_uniform/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17000
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/embedding/Initializer/random_uniform"
  op: "Add"
  input: "Model/embedding/Initializer/random_uniform/mul"
  input: "Model/embedding/Initializer/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17000
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/embedding/Assign"
  op: "Assign"
  input: "Model/embedding"
  input: "Model/embedding/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17000
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/embedding/read"
  op: "Identity"
  input: "Model/embedding"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17000
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/embedding_lookup"
  op: "Gather"
  input: "Model/embedding/read"
  input: "TestInput/Slice"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Model/RNN/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice/pack"
  input: "Model/RNN/strided_slice/pack_1"
  input: "Model/RNN/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
        dim {
          size: 800
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\220\001\000\000 \003\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  op: "Add"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  op: "Identity"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice"
  input: "Model/zeros_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 800
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 800
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  op: "Identity"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/zeros"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
        dim {
          size: 800
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\220\001\000\000 \003\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  op: "Add"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  op: "Identity"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
  input: "Model/zeros_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 800
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 800
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  op: "Identity"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/zeros_2"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_1/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_1/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_1/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_1"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_1/pack"
  input: "Model/RNN/strided_slice_1/pack_1"
  input: "Model/RNN/strided_slice_1/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_1"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_2/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_2/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_2/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_2"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_2/pack"
  input: "Model/RNN/strided_slice_2/pack_1"
  input: "Model/RNN/strided_slice_2/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_2"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_3/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_3/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_3/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_3"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_3/pack"
  input: "Model/RNN/strided_slice_3/pack_1"
  input: "Model/RNN/strided_slice_3/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_3"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_4/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_4/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\005\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_4/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_4"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_4/pack"
  input: "Model/RNN/strided_slice_4/pack_1"
  input: "Model/RNN/strided_slice_4/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_4"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_3/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_5/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\005\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_5/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\006\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_5/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_5"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_5/pack"
  input: "Model/RNN/strided_slice_5/pack_1"
  input: "Model/RNN/strided_slice_5/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_5"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_4/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_6/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\006\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_6/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\007\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_6/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_6"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_6/pack"
  input: "Model/RNN/strided_slice_6/pack_1"
  input: "Model/RNN/strided_slice_6/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_6"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_5/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_7/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\007\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_7/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\010\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_7/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_7"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_7/pack"
  input: "Model/RNN/strided_slice_7/pack_1"
  input: "Model/RNN/strided_slice_7/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_7"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_6/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_8/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\010\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_8/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\t\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_8/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_8"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_8/pack"
  input: "Model/RNN/strided_slice_8/pack_1"
  input: "Model/RNN/strided_slice_8/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_8"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_7/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_9/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\t\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_9/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\n\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_9/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_9"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_9/pack"
  input: "Model/RNN/strided_slice_9/pack_1"
  input: "Model/RNN/strided_slice_9/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_9"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_8/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_10/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\n\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_10/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\013\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_10/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_10"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_10/pack"
  input: "Model/RNN/strided_slice_10/pack_1"
  input: "Model/RNN/strided_slice_10/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_10"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_9/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_11/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\013\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_11/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\014\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_11/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_11"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_11/pack"
  input: "Model/RNN/strided_slice_11/pack_1"
  input: "Model/RNN/strided_slice_11/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_11"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_10/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_12/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\014\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_12/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\r\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_12/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_12"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_12/pack"
  input: "Model/RNN/strided_slice_12/pack_1"
  input: "Model/RNN/strided_slice_12/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_12"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_11/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_13/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\r\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_13/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\016\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_13/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_13"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_13/pack"
  input: "Model/RNN/strided_slice_13/pack_1"
  input: "Model/RNN/strided_slice_13/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_13"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_12/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_14/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\016\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_14/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\017\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_14/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_14"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_14/pack"
  input: "Model/RNN/strided_slice_14/pack_1"
  input: "Model/RNN/strided_slice_14/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_14"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_13/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_15/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\017\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_15/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\020\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_15/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_15"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_15/pack"
  input: "Model/RNN/strided_slice_15/pack_1"
  input: "Model/RNN/strided_slice_15/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_15"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_14/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_16/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\020\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_16/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\021\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_16/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_16"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_16/pack"
  input: "Model/RNN/strided_slice_16/pack_1"
  input: "Model/RNN/strided_slice_16/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_16"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_15/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_17/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\021\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_17/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\022\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_17/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_17"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_17/pack"
  input: "Model/RNN/strided_slice_17/pack_1"
  input: "Model/RNN/strided_slice_17/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_17"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_16/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_18/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\022\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_18/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\023\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_18/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_18"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_18/pack"
  input: "Model/RNN/strided_slice_18/pack_1"
  input: "Model/RNN/strided_slice_18/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_18"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_17/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_19/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\023\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_19/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\024\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_19/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/strided_slice_19"
  op: "StridedSlice"
  input: "Model/embedding_lookup"
  input: "Model/RNN/strided_slice_19/pack"
  input: "Model/RNN/strided_slice_19/pack_1"
  input: "Model/RNN/strided_slice_19/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/strided_slice_19"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_18/Cell0/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell_19/Cell0/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/split/split_dim"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/split:2"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/add_2"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/mul"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/Tanh_1"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Model/concat"
  op: "Concat"
  input: "Model/concat/concat_dim"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_3/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_4/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_5/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_6/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_7/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_8/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_9/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_10/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_11/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_12/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_13/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_14/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_15/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_16/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_17/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_18/Cell1/BasicLSTMCell/mul_2"
  input: "Model/RNN/MultiRNNCell_19/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 20
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 4000
          }
        }
      }
    }
  }
}
node {
  name: "Model/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\310\000\000\000"
      }
    }
  }
}
node {
  name: "Model/Reshape"
  op: "Reshape"
  input: "Model/concat"
  input: "Model/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Model/softmax_w"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 17000
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 17000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/softmax_w/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000hB\000\000"
      }
    }
  }
}
node {
  name: "Model/softmax_w/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/softmax_w/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/softmax_w/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/softmax_w/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 17000
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Model/softmax_w/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/softmax_w/Initializer/random_uniform/max"
  input: "Model/softmax_w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/softmax_w/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/softmax_w/Initializer/random_uniform/RandomUniform"
  input: "Model/softmax_w/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 17000
          }
        }
      }
    }
  }
}
node {
  name: "Model/softmax_w/Initializer/random_uniform"
  op: "Add"
  input: "Model/softmax_w/Initializer/random_uniform/mul"
  input: "Model/softmax_w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 17000
          }
        }
      }
    }
  }
}
node {
  name: "Model/softmax_w/Assign"
  op: "Assign"
  input: "Model/softmax_w"
  input: "Model/softmax_w/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 17000
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/softmax_w/read"
  op: "Identity"
  input: "Model/softmax_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 17000
          }
        }
      }
    }
  }
}
node {
  name: "Model/softmax_b"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17000
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 17000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/softmax_b/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 17000
      }
    }
  }
}
node {
  name: "Model/softmax_b/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/softmax_b/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/softmax_b/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/softmax_b/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17000
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Model/softmax_b/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/softmax_b/Initializer/random_uniform/max"
  input: "Model/softmax_b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/softmax_b/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/softmax_b/Initializer/random_uniform/RandomUniform"
  input: "Model/softmax_b/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17000
          }
        }
      }
    }
  }
}
node {
  name: "Model/softmax_b/Initializer/random_uniform"
  op: "Add"
  input: "Model/softmax_b/Initializer/random_uniform/mul"
  input: "Model/softmax_b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17000
          }
        }
      }
    }
  }
}
node {
  name: "Model/softmax_b/Assign"
  op: "Assign"
  input: "Model/softmax_b"
  input: "Model/softmax_b/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17000
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/softmax_b/read"
  op: "Identity"
  input: "Model/softmax_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17000
          }
        }
      }
    }
  }
}
node {
  name: "Model/MatMul"
  op: "MatMul"
  input: "Model/Reshape"
  input: "Model/softmax_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 17000
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/add"
  op: "Add"
  input: "Model/MatMul"
  input: "Model/softmax_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 17000
          }
        }
      }
    }
  }
}
node {
  name: "Model/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Model/Reshape_1"
  op: "Reshape"
  input: "TestInput/Slice_1"
  input: "Model/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/ones"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Model/sequence_loss_by_example/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Model/sequence_loss_by_example/Reshape"
  op: "Reshape"
  input: "Model/Reshape_1"
  input: "Model/sequence_loss_by_example/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 400
      }
    }
  }
}
node {
  name: "Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "Model/add"
  input: "Model/sequence_loss_by_example/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
        shape {
          dim {
            size: 400
          }
          dim {
            size: 17000
          }
        }
      }
    }
  }
}
node {
  name: "Model/sequence_loss_by_example/mul"
  op: "Mul"
  input: "Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "Model/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/sequence_loss_by_example/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "Model/sequence_loss_by_example/add"
  op: "Add"
  input: "Model/ones"
  input: "Model/sequence_loss_by_example/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/sequence_loss_by_example/truediv"
  op: "Div"
  input: "Model/sequence_loss_by_example/mul"
  input: "Model/sequence_loss_by_example/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Model/Sum"
  op: "Sum"
  input: "Model/sequence_loss_by_example/truediv"
  input: "Model/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Model/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 20.0
      }
    }
  }
}
node {
  name: "Model/truediv"
  op: "Div"
  input: "Model/Sum"
  input: "Model/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "Model/embedding"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "Model/softmax_w"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "Model/softmax_b"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/pack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/pack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "Model/embedding"
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
        string_val: "Model/softmax_w"
        string_val: "Model/softmax_b"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "Concat"
  input: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init/NoOp"
  op: "NoOp"
  input: "^Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Assign"
  input: "^Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Assign"
  input: "^Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Assign"
  input: "^Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Assign"
  input: "^Model/softmax_w/Assign"
  input: "^Model/softmax_b/Assign"
}
node {
  name: "init/NoOp_1"
  op: "NoOp"
  input: "^Model/embedding/Assign"
  device: "/device:CPU:0"
}
node {
  name: "init"
  op: "NoOp"
  input: "^init/NoOp"
  input: "^init/NoOp_1"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
        string_val: "Model/embedding"
        string_val: "Model/softmax_b"
        string_val: "Model/softmax_w"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  input: "Model/embedding"
  input: "Model/softmax_b"
  input: "Model/softmax_w"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 800
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/embedding"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "Model/embedding"
  input: "save/restore_slice_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17000
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/softmax_b"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "Model/softmax_b"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 17000
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/softmax_w"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "Model/softmax_w"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 17000
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all/NoOp"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
}
node {
  name: "save/restore_all/NoOp_1"
  op: "NoOp"
  input: "^save/Assign_4"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_all/NoOp"
  input: "^save/restore_all/NoOp_1"
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "TestInput/input_producer/fraction_of_32_full/ScalarSummary"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
versions {
  producer: 15
}
